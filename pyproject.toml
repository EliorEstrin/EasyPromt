[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "easyprompt"
version = "0.1.0"
description = "Natural Language to CLI Command Interface"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "EasyPrompt Team", email = "team@easyprompt.dev"}
]
keywords = ["cli", "nlp", "rag", "llm", "command-line"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "typer>=0.9.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    "numpy>=1.24.3",
    "google-generativeai>=0.3.2",
    "openai>=1.3.8",
    "anthropic>=0.7.8",
    "rich>=13.7.0",
    "httpx>=0.25.2",
    "aiofiles>=23.2.1",
    "tenacity>=8.2.3",
]

[project.optional-dependencies]
# Minimal installation without heavy vector processing dependencies
minimal = []

# Full installation with all vector processing capabilities
full = [
    "fastapi>=0.104.1",
    "sentence-transformers>=2.2.2",
    "faiss-cpu>=1.7.4",
    "chromadb>=0.4.18",
    "pinecone-client>=2.2.4",
]

dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]

[project.scripts]
easyprompt = "easyprompt.cli.main:app"

[project.urls]
Homepage = "https://github.com/easyprompt/easyprompt"
Repository = "https://github.com/easyprompt/easyprompt.git"
Issues = "https://github.com/easyprompt/easyprompt/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["easyprompt*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"